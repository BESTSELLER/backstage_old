apiVersion: apps/v1
kind: Deployment
metadata:
  name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
  labels:
    app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
    component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
      component: frontend
  template:
    metadata:
      labels:
        app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
        component: frontend
    spec:
      containers:
        - name: app
          image: $K8S_CLUSTER_docker_registry_url/$SHORT/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: app
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION-backend
  labels:
    app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
    component: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
      component: backend
  template:
    metadata:
      labels:
        app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
        component: backend
    spec:
      containers:
        - name: backend
          image: $K8S_CLUSTER_docker_registry_url/$SHORT/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7000
              name: backend
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
  labels:
    app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
    component: frontend
spec:
  type: ClusterIP
  selector:
    app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
    component: frontend
  ports:
    - name: frontend
      port: 80
      protocol: TCP
      targetPort: app
---
apiVersion: v1
kind: Service
metadata:
  name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION-backend
  labels:
    app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
    component: backend
spec:
  type: ClusterIP
  selector:
    app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
    component: backend
  ports:
    - name: backend
      port: 7000
      protocol: TCP
      targetPort: backend
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
  name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
  labels:
    app: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
    component: ingress
spec:
  rules:
    - host: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION.k8s.bestcorp.net
      http:
        paths:
          - backend:
              serviceName: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
              servicePort: frontend
            path: /
          - backend:
              serviceName: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION-backend
              servicePort: backend
            path: /backend
  tls:
    - hosts:
        - $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION.k8s.bestcorp.net
      secretName: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION-k8s-bestcorp-net-tls