version: 2.1
orbs:
  secret-injector: bestsellerit/secret-injector@1.3.0

executors:
  nodejs:
    docker:
      - image: cimg/node:14.15.1
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS

jobs:
  build:
    executor: nodejs
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      # Beginning of yarn setup, keep in sync between all workflows.
      - run:
          name: yarn install
          command: yarn install
      - run:
          name: verify doc links
          command: node scripts/verify-links.js
      #      - run:
      #          name: prettier
      #          command: yarn prettier:check
      - run:
          name: lint
          command: yarn lerna -- run lint --since origin/master
      - run:
          name: type checking and declarations
          command: yarn tsc:full
      - run:
          name: build all packages
          command: yarn lerna -- run build
      - run:
          name: verify type dependencies
          command: yarn lint:type-deps
      #      - run:
      #          name: test all packages
      #          command: yarn lerna -- run test -- --coverage
      #      - run:
      #          name: verify plugin template
      #          command: yarn lerna -- run diff -- --check
      # End of yarn setup
      - run:
          name: ensure clean working directory
          command: |
            if files=$(git ls-files --exclude-standard --others --modified) && [[ -z "$files" ]]; then
              exit 0
            else
              echo ""
              echo "Working directory has been modified:"
              echo ""
              git status --short
              echo ""
              exit 1
            fi
      - run:
          name: Install envsubt
          command: |
            sudo apt update
            sudo apt install gettext
      - run:
          name: Docker stuff
          command: |
            source /tmp/secrets
            TAG=$K8S_CLUSTER_docker_registry_url/$SHORT/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
            yarn workspace example-backend backstage-cli backend:build-image --build --tag $TAG
            docker login -u $DOCKER_username -p $DOCKER_password $K8S_CLUSTER_docker_registry_url
            docker push $TAG
  deploy:
    docker:
      - image: google/cloud-sdk:alpine
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: gcloud login
          command: |
            source /tmp/secrets
            gcloud auth activate-service-account --key-file=/tmp/cluster_secret.json
      - run:
          name: install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: connect to the cluster
          command: |
            source /tmp/secrets
            gcloud container clusters get-credentials $K8S_CLUSTER_cluster_name --project $K8S_CLUSTER_project_id --zone europe-west4
      - run:
          name: Install envsubt
          command: |
            apk update
            apk add gettext
      - run:
          name: replace strings
          command: |
            source /tmp/secrets
            if [ ${CIRCLE_BRANCH} == "master" ]
            then
              export DEPLOY_VERSION=''
              export SECRET_VERSION=prod
            else
              export DEPLOY_VERSION=-$CIRCLE_BRANCH
              echo 'export DEPLOY_VERSION="-$CIRCLE_BRANCH"' >> $BASH_ENV
              source ${BASH_ENV}
              export SECRET_VERSION=$CIRCLE_BRANCH
            fi
            envsubst < ./secrets.yaml > ./secrets_var.yaml && mv ./secrets_var.yaml ./secrets.yaml
            envsubst < ./deployment.yaml > ./deployment_var.yml && mv ./deployment_var.yml ./deployment.yaml
      - secret-injector/inject:
          app-name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
          deploy-file: ./deployment.yaml
          secret-file: secrets
      - run:
          name: create kubernetes service
          command: |
            kubectl create secret generic $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION --from-env-file=/tmp/secrets.secret --dry-run --save-config -o yaml | kubectl apply -f -
            kubectl apply -f ./deployment.yaml

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - secret-injector/dump-secrets:
          name: gke
          context: id01-dev
          filters:
            branches:
              only:
                - master
      - secret-injector/dump-secrets:
          name: env
          context: id01-dev
          requires:
            - gke
          vault-path: ID/backstage/dev
          format: secret
          output-filename: secrets.secret
      - build:
          context: id01-dev
          filters:
            branches:
              only:
                - master
          requires:
            - env
      - deploy:
          context: id01-dev
          requires:
            - build
  deploy-prod:
    jobs:
      - secret-injector/dump-secrets:
          name: gke
          context: id01-prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
      - secret-injector/dump-secrets:
          requires:
            - gke
          name: env
          vault-path: ID/backstage/prod
          format: secret
          context: id01-dev
          output-filename: secrets.secret
      - build:
          context: id01-prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
          requires:
            - env
      - deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+(\.[0-9]+)*$/
          context: id01-prod
          requires:
            - build
